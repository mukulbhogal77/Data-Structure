import java.util.Stack;

class Main {

  static int Prec(char ch) {
    switch(ch) {
      case '+':
      case '-':
           return 1;

      case '/':
      case '*':
           return 2;

      case '^':
           return 3;

      default:
           return -1;               
    }
  }

  static String infixToPostfix(String str) {
    String result = new String("");
    Stack<Character> stack = new Stack<>();
    for(int i=0; i<str.length(); i++) {
          char ch = str.charAt(i);
          if(Character.isLetterOrDigit(ch)) {
            result += ch;
          }
          else if(ch == '(') {
            stack.push(ch);
          }
          else if(ch == ')') {
            while(!stack.isEmpty() && stack.peek() != '(') {
              result += stack.pop();
            }
            if(stack.peek() != '(') {
              return "Invalid Expn";
            }
            stack.pop();
          }
          else {
            while(!stack.isEmpty() && Prec(ch) <= Prec(stack.peek())) {
              if(!stack.isEmpty() && stack.peek() == '(') 
                return "Invalid Expression"; 
              result += stack.pop();
            }
            stack.push(ch);
          }
    }
    while(!stack.isEmpty()) {
      if(stack.peek() == '(') 
        return "Invalid Expression"; 
        result += stack.pop();
    }
    return result;
  }

  public static void main(String[] args)  
    { 
        String exp = "a+b*(c^d-e)^(f+g*h-i)"; 
        System.out.println(infixToPostfix(exp)); 
    } 
}