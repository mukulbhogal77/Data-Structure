import java.util.Stack;

class Main {

  static int Prec(char c) {
    switch(c) {
      case '+':
      case '-':
        return 1;
      case '/':
      case '*':
        return 2;
      case '^': 
        return 3;
      default:
        return -1;  
    }
  }

  static public String infixToPrefix(String tstr) {
    String result = new String("");
    String str = new String(""); 
    Stack<Character> stack = new Stack<>(); 
    for(int i=tstr.length()-1; i>=0; i--) { 
      if(tstr.charAt(i) == '('){
        str += ')';
      } 
      else if(tstr.charAt(i) == ')') {
        str += '(';
      }
      else {
      str += tstr.charAt(i);
      }
    } 
    for(int i=0; i<str.length(); i++){
      char ch = str.charAt(i);
      if(Character.isLetterOrDigit(ch)) {
        result += ch;
      }
      else if(ch == '(') {
        stack.push(ch);
      }
      else if(ch == ')') {
        while(!stack.isEmpty() && stack.peek() != '(') {
          result += stack.pop();
        }
        stack.pop();
      }
      else {
        while(!stack.isEmpty() && Prec(ch) <= Prec(stack.peek())) {
         if(!stack.isEmpty() && stack.peek() == '(') 
                return "Invalid Expression"; 
          result += stack.pop();
        }
        stack.push(ch);
      }
    }
    while(!stack.isEmpty()) {
      if(stack.peek() == '(') 
        return "Invalid Expression"; 
        result += stack.pop();
    }
    str = "";
    for(int i=result.length()-1; i>=0; i--) {   
       str += result.charAt(i); 
    } 
    return str;
  }

  public static void main(String[] args) {
    String s = ("(a-b/c)*(a/k-l)");  
    System.out.println(infixToPrefix(s));
  }
}